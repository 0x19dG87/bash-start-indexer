version: '2.1'

x-logging:
  &default-logging
  options:
    max-file: '1'
    compress: 'false'
  driver: local

networks:
  monitor-net:
    driver: bridge

services:


######################################################################################
#####################         TRAEFIK PROXY CONTAINER          #######################
######################################################################################      


  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    expose:
      - "8082"
    ports:
      - "443:443"
      - "80:80"
      - "127.0.0.1:8080:8080"
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/dynamic_config.yml"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # TESTING
      - "--certificatesresolvers.myresolver.acme.email=$EMAIL"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./traefik/letsencrypt:/letsencrypt"
      - "./traefik/config/dynamic_config.yml:/dynamic_config.yml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - monitor-net
    labels:
      - "traefik.enable=true"
      

  
######################################################################################
#####################           INDEX NODE CONTAINER 0         #######################
######################################################################################


  index-node-0:
    image: ${GRAPH_NODE_VERSION:-graphprotocol/graph-node:v0.28.2}
    container_name: index-node-0
    volumes:
      - ./graph-node-configs:/root/graph-node-configs/
    environment:
      GRAPH_NODE_CONFIG: /root/graph-node-configs/config.toml
      postgres_host: ${DB_HOST:-postgres}
      postgres_user: ${DB_USER:-graph-node}
      postgres_pass: ${DB_PASS:-db-password}
      postgres_db: ${GRAPH_NODE_DB_NAME:-graph-node}
      ipfs: '${IPFS_ENDPOINT:-https://ipfs.network.thegraph.com/ipfs/}'
      node_role: index-node
      node_id: index_node_0
      BLOCK_INGESTOR: index_node_0
      RUST_LOG: INFO
      GRAPH_LOG: ${GRAPHNODE_LOGLEVEL:-DEBUG}
      GRAPH_ETH_CALL_GAS: 50000000
      GRAPH_GETH_ETH_CALL_ERRORS: "out of gas"
      GRAPH_MAX_GAS_PER_HANDLER: 1000000000000000
      ETHEREUM_TRACE_STREAM_STEP_SIZE: ${ETHEREUM_TRACE_STREAM_STEP_SIZE:-50}
      ETHEREUM_BLOCK_BATCH_SIZE: ${ETHEREUM_BLOCK_BATCH_SIZE:-10}
      ETHEREUM_RPC_MAX_PARALLEL_REQUESTS: ${ETHEREUM_RPC_MAX_PARALLEL_REQUESTS:-64}
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: ${GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE:-500}
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: ${GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE:-200}
      GRAPH_KILL_IF_UNRESPONSIVE: "true"
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: ${FULLTEXT_SEARCH:-true}
      EXPERIMENTAL_SUBGRAPH_VERSION_SWITCHING_MODE: synced
    restart: unless-stopped
    expose:
      - 8001
      - 8000
      - 8030
      - 8040
    networks:
      - monitor-net
    logging: *default-logging



      
